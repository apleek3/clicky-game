{"version":3,"sources":["components/Wrapper/Wrapper.js","components/Navpills/Navpills.js","components/Title/Title.js","components/MattDamonCard/MattDamonCard.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Navpills","href","message","indexOf","style","color","currentScore","topScore","Title","MattDamonCard","onClick","selectMattDamon","name","alt","src","image","key","id","App","state","MattDamons","unselectedMattDamons","shuffleArray","array","i","length","j","Math","floor","random","_ref","undefined","_this","find","item","setState","newMattDamons","filter","_this2","this","components_Wrapper_Wrapper","components_Navpills_Navpills","components_Title_Title","map","MattDamon","components_MattDamonCard_MattDamonCard","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.74fa7925.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper col-md-12\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Navpills.css\";\n\n// Bootstarp Nav-Pills to create the game progress on a wrapper:\nconst Navpills = props => (\n    <div className=\"container-fluid bg-dark\">\n        <ul className=\"nav nav-pills nav-justified\">\n            <li><a href=\"/\">CLICK THE \"MATT\" </a></li>\n            <li\n                className={props.message.indexOf('INCORRECT') !== -1 ? \n                    \"desc-incorrect\" : \n                    props.message.indexOf('CORRECT') !== -1 ?\n                        \"desc-correct\" :\n                        \"desc-normal\"}\n            >\n                {props.message}\n            </li>\n            <li> SCORE: <span style={{color: \"yellow\"}}>{props.currentScore}</span> | BEST: <span style={{color: \"green\"}}>{props.topScore}</span></li>\n        </ul>\n    </div>\n);\n\nexport default Navpills;\n\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title col-md-12\">{props.children}</h1>;\n\nexport default Title;\n","import React from \"react\";\nimport \"./MattDamonCard.css\";\n\n\n//creates the card of Matt Damon. Wraps everything in a nice Div. Nice idea from classmate to change css styles using current score property\nconst MattDamonCard = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img\n        onClick={() => props.selectMattDamon(props.name)}\n        className={\n          props.currentScore === 0\n            ? \"style_prevu_kit style_prevu_kit_ex\"\n            : \"style_prevu_kit\"\n        }\n        alt={props.name}\n        src={props.image}\n        key={props.id}\n      />\n    </div>\n  </div>\n);\n\nexport default MattDamonCard;\n","import React, { Component } from \"react\"; //Imports react; more importantly the Component functionality\nimport \"./App.css\"; //imports our custom CSS\nimport MattDamons from \"./MattDamons.json\"; //imports all of our Matts\nimport Wrapper from \"./components/Wrapper\"; // imports our custom wrapper\nimport Navpills from \"./components/Navpills\"; // imports custom nav score pills\nimport Title from \"./components/Title\"; // adds the title component\nimport MattDamonCard from \"./components/MattDamonCard\"; //imports our major game component, the Matt card\n\nclass App extends Component {\n  state = {\n    //initial state of the component sets the scores, instructions, and current states based on our imports above.\n    //Basically pulls our inputs down into our App\n    message: \"Don't click the same Damon twice!\",\n    topScore: 0,\n    currentScore: 0,\n    MattDamons: MattDamons,\n    unselectedMattDamons: MattDamons\n  };\n\n  componentDidMount() {} //componentDidMount() is invoked immediately after a component is mounted (inserted into the tree). So sayeth the Docs\n\n  // function for shuffling our Matt cards - React way!\n  shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  // function for comparing our selected versus unselected Matt Damons\n  selectMattDamon = name => {\n    const findMattDamon = this.state.unselectedMattDamons.find(\n      item => item.name === name\n    );\n\n    if (findMattDamon === undefined) {\n      // NOT a new Matt Damon\n      this.setState({\n        message: \"INCORRECT!\", //changes the state of the message if the 'if' is met\n        topScore:\n          this.state.currentScore > this.state.topScore // if else which sets the topScore higher if the currentScore gets higher!\n            ? this.state.currentScore\n            : this.state.topScore,\n        currentScore: 0,\n        MattDamons: MattDamons,\n        unselectedMattDamons: MattDamons\n      });\n    } else {\n      // New Matt Damons\n      const newMattDamons = this.state.unselectedMattDamons.filter(\n        //creates a new array based on all of the that passed our first search. New array will keep all the unselected matt damons; now 'selected'\n        item => item.name !== name\n      );\n\n      this.setState({ //sets the new message and ups the score\n        message: \"CORRECT!\",\n        currentScore: this.state.currentScore + 1,\n        MattDamons: MattDamons,\n        unselectedMattDamons: newMattDamons\n      });\n    }\n\n    this.shuffleArray(MattDamons); //shuffle the array to up the difficulty\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Navpills\n          message={this.state.message}\n          currentScore={this.state.currentScore}\n          topScore={this.state.topScore}\n        />\n        <Title />\n        {this.state.MattDamons.map(MattDamon => (\n          <MattDamonCard\n            id={MattDamon.id}\n            name={MattDamon.name}\n            image={MattDamon.image}\n            key={MattDamon.id}\n            selectMattDamon={this.selectMattDamon}\n            currentScore={this.state.currentScore}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}